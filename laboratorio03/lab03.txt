000	01 3FD 05 062
001 12 003 01 3FE
002 05 062 13 003
003	09 000 0B 000
004	0A 000 05 060
005	21 060 01 062
006 05 061 21 062
007 06 3FF 10 008
008	0D 000 01 060
009	0D 400 00 000

060 00 00 00 00 00 #salva a soma dos vetores
061 00 00 00 00 01 #constante 1
062 00 00 00 00 00 #contador

211 00 00 00 00 00
212 00 00 00 00 02
213 00 00 00 00 05

222 00 00 00 00 01
223 00 00 00 00 06
224 00 00 00 00 09

3FD 00 00 00 02 11
3FE 00 00 00 02 22
3FF 00 00 00 00 03

laco:

000	01 3FD LOAD M(0x3FD)       	#AC = inicio vetor 1
    05 062 ADD M(0x062)        	#vai para o indice certo do vetor
001 12 003 STOR M(vet, 8:19)   	#muda o indice do vetor 1 no inicio do loop
    01 3FE LOAD M(0x3FE)       	#AC = inicio vetor 2
002 05 062 ADD M(0x062)        	#vai para o indice certo do vetor
    13 003 STOR M(vet, 28:39)  	#muda o indice do vetor 2 no inicio do loop  
vet:   
003	09 000  LOAD MQ,M(0x3FD)    #MQ = vetor1[0]
	0B 000  MUL M(0x3FE)        #MQ = vetor1[0]*vetor2[0]
004	0A 000  LOAD MQ             #AC = MQ (resultado da multiplicação)
	05 060  ADD M(0x060)        #AC = AC + soma dos vetores
005	21 060  STOR M(0x060)       #0x060 = soma dos vetores atualizada
    

	01 062 LOAD M(0x062)		#AC = contador
006 05 061 ADD M(0x061)			#AC += 1
	21 062 STOR M(0x062)		#atualiza o contador
007 06 3FF SUB M(0x3FF)			#AC = contador - tamanho 
		   JUMP+ (fim) 			#(se tamanho > contador AC < 0, se for igual, chegou no final do vetor)
008	0D 000 JUMP (laco, 0:19)   #volta no laco
    
fim:
	01 060 LOAD (0x060)        #AC = soma dos vetores
009	0D 400 JUMP (0x400)        #finaliza o programa


060 00 00 00 00 00 #salva a soma dos vetores
061 00 00 00 00 01 #constante 1
062 00 00 00 00 00 #contador

0x3FD #comeco vetor 1

0x3FE #comeco vetor 2

0x3FF #tamanho do vetor
